{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.mindshare.so/customer/v1"
    }
  ],
  "security": [
    {
      "apiKeyHeader": []
    }
  ],
  "paths": {
    "/get-organization-customers": {
      "post": {
        "description": "Get all customers linked to the organization",
        "requestBody": {
          "description": "Organization ID",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "organizationID": {
                    "type": "number",
                    "description": "The ID of the organization"
                  }
                },
                "required": [
                  "organizationID"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "List of customers for the organization",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationCustomersResponse"
                }
              }
            }
          }
        }
      }
    },
    "/get-customer-query-groups": {
      "post": {
        "description": "Get all query groups for a customer",
        "requestBody": {
          "description": "Customer ID",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerID": {
                    "type": "number",
                    "description": "The ID of the customer"
                  }
                },
                "required": [
                  "customerID"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "List of query groups for the customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryGroupsResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "webhooks": {
    "/plant/webhook": {
      "post": {
        "description": "Information about a new plant added to the store",
        "requestBody": {
          "description": "Plant added to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPlant"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return a 200 status to indicate that the data was received successfully"
          }
        }
      }
    }
  },
  "components": {
      "schemas": {
        "Plant": {
          "required": [
            "name"
          ],
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the plant",
              "type": "string"
            },
            "tag": {
              "description": "Tag to specify the type",
              "type": "string"
            }
          }
        },
        "NewPlant": {
          "allOf": [
            {
              "$ref": "#/components/schemas/Plant"
            },
            {
              "required": [
                "id"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "description": "Identification number of the plant",
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          ]
        },
        "Error": {
          "required": [
            "error",
            "message"
          ],
          "type": "object",
          "properties": {
            "error": {
              "type": "integer",
              "format": "int32"
            },
            "message": {
              "type": "string"
            }
          }
        },
        "Customer": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "Customer ID"
            },
            "name": {
              "type": "string",
              "description": "Customer name"
            },
            "created_time": {
              "type": "string",
              "format": "date-time",
              "description": "Customer creation timestamp"
            },
            "trial_start": {
              "type": "string",
              "format": "date-time",
              "description": "Trial start date"
            },
            "trial_end": {
              "type": "string",
              "format": "date-time",
              "description": "Trial end date"
            },
            "last_scan_date": {
              "type": "string",
              "format": "date-time",
              "description": "Last scan date"
            },
            "next_scheduled_run": {
              "type": "string",
              "format": "date-time",
              "nullable": true,
              "description": "Next scheduled run date"
            },
            "paying_customer": {
              "type": "boolean",
              "description": "Whether the customer is a paying customer"
            },
            "website_url": {
              "type": "string",
              "format": "uri",
              "description": "Customer website URL"
            },
            "view_report_url": {
              "type": "string",
              "description": "URL to view the customer report"
            }
          },
          "required": [
            "id",
            "name",
            "created_time",
            "trial_start",
            "trial_end",
            "last_scan_date",
            "paying_customer",
            "website_url",
            "view_report_url"
          ]
        },
        "OrganizationCustomersResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Customer"
              },
              "description": "List of customers"
            },
            "version": {
              "type": "string",
              "description": "API version"
            },
            "env": {
              "type": "string",
              "description": "Environment name"
            }
          },
          "required": [
            "status",
            "data",
            "version",
            "env"
          ]
        },
        "Execution": {
          "type": "object",
          "properties": {
            "id": {
              "type": "number",
              "description": "Execution ID"
            },
            "title": {
              "type": "string",
              "description": "Execution title"
            },
            "execution_date": {
              "type": "string",
              "format": "date",
              "description": "Date of execution"
            },
            "score": {
              "type": "number",
              "description": "Execution score"
            }
          },
          "required": [
            "id",
            "title",
            "execution_date",
            "score"
          ]
        },
        "QueryGroup": {
          "type": "object",
          "properties": {
            "query_group_id": {
              "type": "number",
              "description": "Query group ID"
            },
            "group_type": {
              "type": "string",
              "description": "Type of the group"
            },
            "query_group_title": {
              "type": "string",
              "description": "Title of the query group"
            },
            "created_time": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp"
            },
            "keywords": {
              "type": "string",
              "description": "Keywords for the group"
            },
            "num_of_queries": {
              "type": "number",
              "nullable": true,
              "description": "Number of queries"
            },
            "website_url": {
              "type": "string",
              "format": "uri",
              "description": "Website URL"
            },
            "run_from_location": {
              "type": "string",
              "description": "Location to run from. Default is 'us'"
            },
            "executions": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Execution"
              },
              "description": "List of executions"
            }
          },
          "required": [
            "query_group_id",
            "group_type",
            "query_group_title",
            "created_time",
            "keywords",
            "website_url",
            "run_from_location",
            "executions"
          ]
        },
        "QueryGroupsResponse": {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QueryGroup"
              },
              "description": "List of query groups"
            },
            "version": {
              "type": "string",
              "description": "API version"
            },
            "env": {
              "type": "string",
              "description": "Environment name"
            }
          },
          "required": [
            "status",
            "data",
            "version",
            "env"
          ]
        }
      },
      "securitySchemes": {
        "apiKeyHeader": {
          "type": "apiKey",
          "in": "header",
          "name": "X-API-Key"
        }
      }
    }
  }